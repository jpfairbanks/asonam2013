#ifndef  ALG_CONVERT_H
#define  ALG_CONVERT_H

#include <stdint.h>

#define ALG_TYPES \
  TYPE(ALG_NONE					), \
  TYPE(ALG_BLACKLIST 				), \
  TYPE(ALG_BY_GROUP 				), \
  TYPE(ALG_EVENT_TIME 				), \
  TYPE(ALG_LDAP_GROUP 				), \
  TYPE(ALG_LOGON_CORRECTION			), \
  TYPE(ALG_SPARSE_VECTOR 			), \
  TYPE(ALG_MERGE_SCORES			        ), \
  TYPE(ALG_UNSPARSE_VECTOR 			), \
  TYPE(ALG_EMAIL_TO_USER 			), \
  TYPE(ALG_EMAIL_SUMMARIZE 			), \
  TYPE(ALG_MERGESCORES_FLOW 			), \
  TYPE(ALG_MERGESCORES_DAY 			), \
  TYPE(ALG_MERGESCORES_WEEK 			), \
  TYPE(ALG_SIMPLE_STAT_SCORER 			), \
  TYPE(ALG_URL_FEATURES 			), \
  TYPE(ALG_URL_FEATURES_SCORE  			), \
  TYPE(ALG_LOGON_FEATURES 		 	), \
  TYPE(ALG_LOGON_FEATURES_SCORE			), \
  TYPE(ALG_PRINTER_FEATURES			), \
  TYPE(ALG_PRINTER_FEATURES_SCORE		), \
  TYPE(ALG_DEVICE_FEATURES 			), \
  TYPE(ALG_DEVICE_FEATURES_SCORE		), \
  TYPE(ALG_EMAIL_FEATURES 			), \
  TYPE(ALG_EMAIL_FEATURES_SCORE			), \
  TYPE(ALG_FILE_FEATURES 			), \
  TYPE(ALG_FILE_FEATURES_SCORE			), \
  TYPE(ALG_OTHER_FEATURE_SCORE			), \
  TYPE(ALG_URL_UPLOAD_SCORE			), \
  TYPE(ALG_URL_DOWNLOAD_SCORE			), \
  TYPE(ALG_URL_BLACKLIST_VISITS_SCORE		), \
  TYPE(ALG_URL_DISTINCT_BLACKLIST_SCORE		), \
  TYPE(ALG_URL_DOMAINS_PER_USER_SCORE		), \
  TYPE(ALG_LOGON_SCORE			        ), \
  TYPE(ALG_LOGON_WORKSTATION_SCORE		), \
  TYPE(ALG_LOGON_ANOMALOUS_WORKSTATION_COUNT	), \
  TYPE(ALG_PRINTER_NUMBER_OF_JOBS_SCORE		), \
  TYPE(ALG_PRINTER_DISTINCT_PRINTER_SCORE	), \
  TYPE(ALG_PRINTER_WORKSTATION_SCORE		), \
  TYPE(ALG_PRINTER_PER_USER_SCORE		), \
  TYPE(ALG_EMAIL_RCVD_NUMBER_VIEWED_SCORE	), \
  TYPE(ALG_EMAIL_SENT_NUMBER_SENT_SCORE		), \
  TYPE(ALG_FILE_REMOVABLE_ACCESS_SCORE	        ), \
  TYPE(ALG_FILE_REMOVABLE_COPY_TO_SCORE		), \
  TYPE(ALG_FILE_REMOVABLE_COPY_FROM_SCORE	), \
  TYPE(ALG_FILE_NUMBER_CREATED_SCORE	        ), \
  TYPE(ALG_FILE_FOLDER_CREATED_SCORE	        ), \
  TYPE(MAX_ALG_TYPE)

#define TYPE(X) X
typedef enum {
  ALG_TYPES
} algtype_t;
#undef TYPE

void
init_algs_to_dts();

void
free_algs_to_dts();

int64_t
alg_to_dt(int64_t alg);

int64_t
dt_to_alg(int64_t dt);

const char *
get_string_from_alg(int64_t alg);

#endif  /*ALG_CONVERT_H*/
